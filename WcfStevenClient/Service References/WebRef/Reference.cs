//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfStevenClient.WebRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string departmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string age {
            get {
                return this.ageField;
            }
            set {
                if ((object.ReferenceEquals(this.ageField, value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string department {
            get {
                return this.departmentField;
            }
            set {
                if ((object.ReferenceEquals(this.departmentField, value) != true)) {
                    this.departmentField = value;
                    this.RaisePropertyChanged("department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebRef.IStevenService")]
    public interface IStevenService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/GetData", ReplyAction="http://tempuri.org/IStevenService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/GetData", ReplyAction="http://tempuri.org/IStevenService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/GetEmployeeDetailsById", ReplyAction="http://tempuri.org/IStevenService/GetEmployeeDetailsByIdResponse")]
        WcfStevenClient.WebRef.Employee GetEmployeeDetailsById(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/GetEmployeeDetailsById", ReplyAction="http://tempuri.org/IStevenService/GetEmployeeDetailsByIdResponse")]
        System.Threading.Tasks.Task<WcfStevenClient.WebRef.Employee> GetEmployeeDetailsByIdAsync(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/GetXml", ReplyAction="http://tempuri.org/IStevenService/GetXmlResponse")]
        string GetXml();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/GetXml", ReplyAction="http://tempuri.org/IStevenService/GetXmlResponse")]
        System.Threading.Tasks.Task<string> GetXmlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IStevenService/GetDataUsingDataContractResponse")]
        WcfStevenClient.WebRef.CompositeType GetDataUsingDataContract(WcfStevenClient.WebRef.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IStevenService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WcfStevenClient.WebRef.CompositeType> GetDataUsingDataContractAsync(WcfStevenClient.WebRef.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/getAge", ReplyAction="http://tempuri.org/IStevenService/getAgeResponse")]
        string getAge(string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/getAge", ReplyAction="http://tempuri.org/IStevenService/getAgeResponse")]
        System.Threading.Tasks.Task<string> getAgeAsync(string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/SetData", ReplyAction="http://tempuri.org/IStevenService/SetDataResponse")]
        void SetData(System.Collections.Generic.Dictionary<string, string> dicEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/SetData", ReplyAction="http://tempuri.org/IStevenService/SetDataResponse")]
        System.Threading.Tasks.Task SetDataAsync(System.Collections.Generic.Dictionary<string, string> dicEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/SetEmployees", ReplyAction="http://tempuri.org/IStevenService/SetEmployeesResponse")]
        void SetEmployees(WcfStevenClient.WebRef.Employee[] lstEmp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStevenService/SetEmployees", ReplyAction="http://tempuri.org/IStevenService/SetEmployeesResponse")]
        System.Threading.Tasks.Task SetEmployeesAsync(WcfStevenClient.WebRef.Employee[] lstEmp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStevenServiceChannel : WcfStevenClient.WebRef.IStevenService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StevenServiceClient : System.ServiceModel.ClientBase<WcfStevenClient.WebRef.IStevenService>, WcfStevenClient.WebRef.IStevenService {
        
        public StevenServiceClient() {
        }
        
        public StevenServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StevenServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StevenServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StevenServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WcfStevenClient.WebRef.Employee GetEmployeeDetailsById(string value) {
            return base.Channel.GetEmployeeDetailsById(value);
        }
        
        public System.Threading.Tasks.Task<WcfStevenClient.WebRef.Employee> GetEmployeeDetailsByIdAsync(string value) {
            return base.Channel.GetEmployeeDetailsByIdAsync(value);
        }
        
        public string GetXml() {
            return base.Channel.GetXml();
        }
        
        public System.Threading.Tasks.Task<string> GetXmlAsync() {
            return base.Channel.GetXmlAsync();
        }
        
        public WcfStevenClient.WebRef.CompositeType GetDataUsingDataContract(WcfStevenClient.WebRef.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WcfStevenClient.WebRef.CompositeType> GetDataUsingDataContractAsync(WcfStevenClient.WebRef.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public string getAge(string firstName) {
            return base.Channel.getAge(firstName);
        }
        
        public System.Threading.Tasks.Task<string> getAgeAsync(string firstName) {
            return base.Channel.getAgeAsync(firstName);
        }
        
        public void SetData(System.Collections.Generic.Dictionary<string, string> dicEmp) {
            base.Channel.SetData(dicEmp);
        }
        
        public System.Threading.Tasks.Task SetDataAsync(System.Collections.Generic.Dictionary<string, string> dicEmp) {
            return base.Channel.SetDataAsync(dicEmp);
        }
        
        public void SetEmployees(WcfStevenClient.WebRef.Employee[] lstEmp) {
            base.Channel.SetEmployees(lstEmp);
        }
        
        public System.Threading.Tasks.Task SetEmployeesAsync(WcfStevenClient.WebRef.Employee[] lstEmp) {
            return base.Channel.SetEmployeesAsync(lstEmp);
        }
    }
}
